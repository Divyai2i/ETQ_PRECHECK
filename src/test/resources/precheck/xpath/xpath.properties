Xpath

MMP_396_MySQL_Database_Check_1

tc_01_db_meta_info()
mysql_meta_body = //*[contains(text(),'OverallCount')]/following::tbody[1]/tr
mysql_meta_data = //*[contains(text(),'OverallCount')]/following::tbody[1]/tr["+ (i+1) +"]/td

tc_02_non_core_schema_index_count()
non_core_body = //*[contains(text(),'Index Count - NonCore:')]/following::tbody[1]/tr
non_core_data = //*[contains(text(),'Index Count - NonCore:')]/following::tbody[1]/tr[" + generate + "]/td

tc_03_core_schema_index_count()
core_body = //*[contains(text(),'Index Count - Core')]/following::tbody[1]/tr
core_data = //*[contains(text(),'Index Count - Core')]/following::tbody[1]/tr[" + generate + "]/td

tc_04_DB_check()
utilized_DB_size =  //*[contains(text(),'Utilized DB size')]/../following::tr[1]
user_privilage = //*[contains(text(),'DB Privileges Validation')]/../following::tr[1]
DB_User_count = //*[contains(text(),'Total number of DB users')]/../following::tr[1]
core_schema_size = //*[contains(text(),'Core Schema')]/../following::tr[1]
DB_version = //*[contains(text(),'Database Version')]/../following::tr[1]
non_core_schema_size = //*[contains(text(),'Noncore Schema')]/../following::tr[1]
engine_version = //*[contains(text(),'Engine Version')]/../following::tr[1]

tc_05_count_and_list_of_Database_users()
list_db_user=//*[@id='dataframe'][2]/tbody/tr

tc_06_Report_check()
report_validation = //h2


MMP378_MySQLStoredProcedure

tc01_Reportheadingsvalidation()
heading_list = //*[contains(text(),'Stored Procedures')]/following::thead/tr/th

tc02_CountOfStoredProcedure()
sp_count = //*[contains(text(),'SP Count')]/../following::tbody[1]/tr/td[6]
sp_list = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr

tc03_IsReportGenerateStoredProcedure()
sp_data_list = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr
sp_each_data_list = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr[1]/td

tc04_IsReportStoredProcedureMatchesSource()

sp_data = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr


MMP379_LinuxMSSQLStoredProcedure

tc01_Reportheadingsvalidation()
reportHeadingList = //*[contains(text(),'Stored Procedures')]/following::thead/tr/th

tc02_CountOfStoredProcedure()
reportSPCount = //*[contains(text(),'SP Count')]/../following::tbody[1]/tr/td[6]
reportSPList = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr

tc03_IsReportGenerateStoredProcedure()
spDataList = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr
spEachDataList = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr[1]/td

tc04_IsReportStoredProcedureMatchesSource()

spData = //*[contains(text(),'Stored Procedures')]/following::tbody[1]/tr



MMP383_EmbeddedSQLQueries

tc01_IsAbleToFetchSourceEmbeddedQueries()
totalQueryProcessed  = //*[contains(text(),'Total number of query processed')]/following::tr[1]
totalQueryPassed =  //*[contains(text(),'Total number of query PASSED')]/following::tr[1]
totalQueryFailed = //*[contains(text(),'Total number of query FAILED')]/following::tr[1]
 
tc07_IsReportCaptureOverallProcessDuration()
processedDuration = //*[contains(text(),' Execution time')]/following::tr[1]


MMP368_DatabaseViews

tc06_IsTotalViewsAndPassedFailedViewsCapturedInReportAndCountMatchesWithSource()
totalViews = //*[contains(text(),'Total number of view')]/following::tr[1]
PassedViews = //*[contains(text(),'Passed view count')]/following::tr[1]
FailedViews = //*[contains(text(),'Failed view count')]/following::tr[1]


MMP381_MSSQLDatabaseViews

tc06_IsTotalViewsAndPassedFailedViewsCapturedInReportAndCountMatchesWithSource()
reportTotalViews = //*[contains(text(),'Total number of view')]/following::tr[1]
reportPassedViews = //*[contains(text(),'Passed view count')]/following::tr[1]
reportFailedViews = //*[contains(text(),'Failed view count')]/following::tr[1]


MMP381_MSSQLDatabaseViews

tc06_IsTotalViewsAndPassedFailedViewsCapturedInReportAndCountMatchesWithSource()
oracleTotalViews = //*[contains(text(),'Total number of view')]/following::tr[1]
oraclePassedViews = //*[contains(text(),'Passed view count')]/following::tr[1]
oracleFailedViews = //*[contains(text(),'Failed view count')]/following::tr[1]


MMP388_EmbeddedSQLQueriesJavaSearch

tc02_IsIdentifyReportQueryHave3OrMoreUNIONKeyword()
javaKeywordSearch = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[2]
javaKeywordOwner = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[1]

tc03_IdentifiedReportQueryCapturedInFormat()
keywordOwnerFormat = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[1]

tc05_IsReportAndSourceQueryCountSame()
overallKeywordCount = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[1]

tc06_ReportAndSourceQueryAreSame()
javaKeywordSearchQuery = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[2]

tc07_IsReportQueryPathValid()
reportQueryPath = //*[contains(text(),'APPENDIX: Java Search SQL')]/following::tbody[1]/tr/td[1]


MMP391_ETQPythonScriptSQLQueries

tc06_IsSpecifiedDetailsCapturedInReport()
sqlReferenceList = //*[contains(text(),'APPENDIX: SQL Lookups Reference')]/following::thead[1]/tr/th

tc10_ItemNameCapturedAsSQLLookupsReference()
itemReference = //*[contains(text(),'SQL Lookups Reference')]


MMP392_EmbeddedSQLQueriesAliasHandling

tc04_IsReportCapturedQueryPathWithPrimaryKey()
queryPathList = //*[contains(text(),'APPENDIX: SQL Query references to all Lookup Schema')]/following::tbody[1]/tr/td[1]
appendixReference = //*[contains(text(),'APPENDIX: SQL Query references to all Lookup Schema')]
sqlQueryReference = //*[starts-with(*, 'SQL Query references to all Lookup Schema')]/td[1]

tc08_IsReportQueryMatchesWithSource()
reportQueryList = //*[contains(text(),'APPENDIX: SQL Query references to all Lookup Schema')]/following::tbody[1]/tr/td[2]

tc09_IsPathReturnedQueryMatchesSource()
reportQueryPathList = //*[contains(text(),'APPENDIX: SQL Query references to all Lookup Schema')]/following::tbody[1]/tr/td[1]
reportQuery = //*[contains(text(),'APPENDIX: SQL Query references to all Lookup Schema')]/following::tbody[1]/tr/td[2]


MMP382_MSSQL_Database_Check

tc02_IsMssqlDataTypesFetchedAreSupportedOrUnsupportedForMysql()
dataTypesList = //*[contains(text(),'Datatypes Present in Current DB')]/following::tbody[1]/tr

tc04_IsIndexCountGreaterThan64()
reportIndexCount = //*[contains(text(),'Index Information (>64)')]/following::tbody[1]/tr


tc06_IsMaximumIdentifiersAreListedForSchemaTableColumnNameGreaterThan64()
reportIdentifiersrow = //*[contains(text(),'DB Maximum Identifiers (>64)')]/following::tbody[1]/tr
reportIdentifierscolumn = //*[contains(text(),'DB Maximum Identifiers (>64)')]/following::tbody[1]/tr[1]/td

tc07_DataBaseChecks()
dbUtilizedSize = //*[contains(text(),'Utilized DB size')]//following::td[1]
coreSchemaSize = //*[contains(text(),'Core Schema')]/following::td[1]
NoncoreSchema = //*[contains(text(),'Noncore Schema')]/following::td[1]
dbVersion = //*[contains(text(),'Database Version')]/following::td[1]
engineVersion = //*[contains(text(),'Engine Version')]/following::td[1]
privilegeValidation = //*[contains(text(),'DB Privileges Validation')]/following::td[1]

tc08_IsReportCapturedAllChecks()
reportCapturedAllChecks = //*[contains(text(),'Migration Client Info')]/../h2
dbChecks = //*[contains(text(),'Database Checks')]/following::th


MMP844_CustomApplicationCheckExclusionList

tc01_IsCoreSchemasExcludedInCustomData()
unmatchedReportList = //*[contains(text(),'Custom Applications')]/../td[2]/ul/li
unmatchedEmptyList = //*[contains(text(),'Custom Applications')]/../td[2]


MMP384_EmbeddedSQLQueriesMSSQL

tc01_IsAbleToFetchSourceEmbeddedQueries()
totalQueryProcessedCount  = //*[contains(text(),'Total number of query processed')]/following::tr[1]
QueryPassedCount =  //*[contains(text(),'Total number of query PASSED')]/following::tr[1]
QueryFailedCount = //*[contains(text(),'Total number of query FAILED')]/following::tr[1]
 
tc07_IsReportCaptureOverallProcessDuration()
processedDuration = //*[contains(text(),' Execution time')]/following::tr[1]


MMP512_WindowsInfrastructureChecks

tc02_IsReportCaptureInfraCheck()
infraCheckList = //*[contains(text(),'Source Infrastructure Details')]/following::tbody[1]/tr/td[1]

tc03_IsReportCaptureIfUserPrivilegesFalse()
privilegesCheck = //*[contains(text(),'Source Infrastructure Details')]/following::tbody[1]/tr["+ (i + 2) + "]/td[3]


MMP534_DestinationDatabaseCheck

tc03_IsENVIDNotPresentInCoreSchemaTableRecordInDestination()
envID = //*[contains(text(),'Environment-ID')]/../td

MMP387_IntegrationCheck

tc01_isSsoEnabled(),tc02_isSsoDisabled
ssoEnabled = //*[contains(text(),'SSO Authentication')]/../td

tc03_checkSsoType
ssoType = //*[contains(text(),'SSO Authentication')]/../../tr[3]

tc04_checkForSharePointProfile
sharePointProfile = //*[contains(text(),'Sharepoint Connection Profile')]/../td
sharePointProfile_p = //*[contains(text(),'Sharepoint Connection Profile')]/../td[2]/p
sharePointProfile_list = //*[contains(text(),'Sharepoint Connection Profile')]/../td[2]/ul/li

tc05_checkForWSRestfulProfile
wsRestfulProfile = //*[contains(text(),'WS Restful Profile')]/../td
wsRestfulProfile_p = //*[contains(text(),'WS Restful Profile')]/../td[2]/p
wsRestfulProfile_list = //*[contains(text(),'WS Restful Profile')]/../td[2]/ul/li
wsRestfulOperation = //*[contains(text(),'WS Restful Operation')]/../td
wsRestfulOperation_p = //*[contains(text(),'WS Restful Operation')]/../td[2]/p
wsRestfulOperation_list = //*[contains(text(),'WS Restful Operation')]/../td[2]/ul/li

tc06_checkForDatabaseConnectionProfile
databaseConnectionProfile = //*[contains(text(),'Database Connection Profile')]/../td
databaseConnectionProfile_p = //*[contains(text(),'Database Connection Profile')]/../td[2]/p
databaseConnectionProfile_list = //*[contains(text(),'Database Connection Profile')]/../td[2]/ul/li


tc07_checkForwsAccessConnectionProfile
wsAccessConnectionProfile = //*[contains(text(),'WS Access Profile')]/../td
wsAccessConnectionProfile_p = //*[contains(text(),'WS Access Profile')]/../td[2]/p
wsAccessConnectionProfile_list = //*[contains(text(),'WS Access Profile')]/../td[2]/ul/li

tc08_checkForsoapProfile
soapConnectionProfile = //*[contains(text(),'SOAP WS Profile')]/../td
soapConnectionProfile_p = //*[contains(text(),'SOAP WS Profile')]/../td[2]/p
soapConnectionProfile_list = //*[contains(text(),'SOAP WS Profile')]/../td[2]/ul/li

tc09_checkLdapUnavailableEnabled,tc10_checkLdapUnavailabledisabled
ldap_authentication = //*[contains(text(),'LDAP Authentication')]/../td

MMP389_EMDRCheck

tc02_checkIfEMDREnabled,tc03_checkIfEMDRdisabled
eMDR = //*[contains(text(),'eMDR')]/../td

MMP481_RelianceVersionCheck

tc02_checkForValidRelianceVersion
reliance_version_validation = //*[contains(text(),'Reliance Version Validation')]/../../tr[2]/td
reliance_version = //*[contains(text(),'Reliance Version')]/../../tr[4]/td

MMP530_ETQDevelopmentEnvironmentProperty
tc02_checkForisEtQDevelopmentEnvironmentEnabled
etq_development_environment = //*[contains(text(),'EtQDevelopment Environment')]/../td

MMP529_OOBCheck
tc02_checkforUnmatchedDataCaptured 
custom_application_list = //*[contains(text(),'Custom Applications')]/../td[2]/ul/li

MMP351_OracleDatabaseCheck

tc01_DBMetaInfo
db_meta_info = //*[contains(text(),'DB Meta Information')]/following::tbody[1]/tr

tc02_checkDataTypes
data_types = //*[contains(text(),'Datatypes Present in Current DB')]/following::table[1]/tbody[1]/tr

tc04_verifyIndexInformationGreaterThan64
index_info = //*[contains(text(),'Index Information (>64)')]/following::tbody[1]/tr
index_info_nodata = //*[contains(text(),'Index Information (>64)')]/following::h3[1]


tc06_verifyIdentifierLengthGreaterThan64
db_max_identifiers = //*[contains(text(),'DB Maximum Identifiers (>64)')]/following::tbody[1]/tr
db_max_identifiers_nodata = //*[contains(text(),'DB Maximum Identifiers (>64)')]/following::h3[1]

tc07_verifyMaterializedViewAndPackage
db_materialized_view_oracle = //*[contains(text(),'DB Materialized views(Oracle)')]/following::tbody[1]/tr
db_materialized_view_oracle_nodata = //*[contains(text(),'DB Materialized views(Oracle)')]/following::h3[1]



MMP380_OracleStoredProcedure

tc01_verifyReportHasStoredProcedureHeading
stored_procedure_heading = //*[contains(text(),'Stored Procedures')]/following::table[1]/thead/tr/th
meta_info_db_column = //*[contains(text(),'DB Meta Information')]/following::table[1]/tbody[1]/tr/td[1]
stored_procedure_column = //*[contains(text(),'DB Meta Information')]/following::table[1]/tbody[1]/tr/td[6]


MMP524_MobileAppIsEnabledDisabled

tc01_IsMobileAppEnabled
mobile_app = //*[contains(text(),'Mobile App')]/../td
mobile_app_enabled_list = //*[contains(text(),'Mobile App')]/../td/ul/li

tc04_IsReportContainsFormName
mobile_app_list = //*[contains(text(),'Mobile App')]/../td[3]/ul/li

MMP845_WindowsFileSystemCheck

tc01_verifyFileSystemSize
file_system_details = //*[contains(text(),'Filesystem Details')]/following::table[1]/tbody[1]/tr[2]/td

tc02_verifySizeandNumberOfFolders
folder_details = //*[contains(text(),'Folders Details')]/following::table[1]/tbody[1]/tr/td[1]
count_of_objects = //*[contains(text(),'Folders Details')]/following::table[1]/tbody[1]/tr/td[2]
folder_size = //*[contains(text(),'Folders Details')]/following::table[1]/tbody[1]/tr/td[3]

tc03_verifyIgnoredFiles
excluded_folder_details = //*[contains(text(),'Excluded Folder Details')]/following::table[1]/tbody[1]/tr

tc04_verifyAttachementRoot
attachment_folder_details = //*[contains(text(),'Attachment Folder Details')]/following::table[1]/tbody[1]/tr/td

tc06_verifyApplicationLog
application_log_details = //*[contains(text(),'Application Log details')]/following::table[1]/tbody[1]/tr/td

tc09_verifyIfWrongPathsGiven
web_resources_no_data = //*[contains(text(),'Web Resources')]/following::table[1]/following::h3
folder_details_no_data = //*[contains(text(),'Folders Details')]/following::table[1]/following::h3

MMP531_ExternalDatabaseProfiles

tc02_verifyExternalDatabaseInReport
external_database_profiles = //*[contains(text(),'External Database Profiles')]/../td
external_database_profiles_list = //*[contains(text(),'External Database Profiles')]/../td/ul/li


MMP1288_LDAPGroupProvision

tc01_checkIfLDAPGroupQueryReturnAnyRow,tc02_checkIfLDAPGroupQueryReturnNoRow
ldap_group_sync = //*[contains(text(),'LDAP Group Synchronization')]/../td

tc03_checkIfLDAPUserQueryReturnAnyRow
ldap_user_sync = //*[contains(text(),'LDAP User Synchronization')]/../td


tc01_checkXMLConnectionProfileRetrunsRow,tc02_checkXMLConnectionProfileRetrunsEmptyRow
xmlConnectionProfile = //*[contains(text(),'XML Connection Profile')]/../td
xmlConnectionProfile_p = //*[contains(text(),'XML Connection Profile')]/../td[2]/p
xmlConnectionProfile_list = //*[contains(text(),'XML Connection Profile')]/../td[2]/ul/li

tc03_checkCSVConnectionProfileRetrunsRow,tc04_checkCSVConnectionProfileRetrunsEmptyRow
csvConnectionProfile = //*[contains(text(),'CSV Connection Profile')]/../td
csvConnectionProfile_p = //*[contains(text(),'CSV Connection Profile')]/../td[2]/p
csvConnectionProfile_list = //*[contains(text(),'CSV Connection Profile')]/../td[2]/ul/li
