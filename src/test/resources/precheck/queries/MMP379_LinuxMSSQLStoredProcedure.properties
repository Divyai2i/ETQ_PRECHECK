MMP379_LinuxMSSQLStoredProcedure

tc02_CountOfStoredProcedure()
storedProcedureCount = select d.schema_name, (select COUNT(*) as count from ( select obj.schema_id, schema_name(obj.schema_id) as schema_name, obj.name as procedure_name, case type when 'P' then 'SQL Stored Procedure' when 'X' then 'Extended stored procedure' end as type, substring(par.parameters, 0, len(par.parameters)) as parameters, mod.definition from sys.objects obj join sys.sql_modules mod on mod.object_id = obj.object_id cross apply(select p.name + ' ' + TYPE_NAME(p.user_type_id) + ', ' from sys.parameters p where p.object_id = obj.object_id and p.parameter_id != 0 for xml path ('')) par (parameters) where obj.type in ('P', 'X') and obj.schema_id = d.schema_id) as sp) as sp_count ,(select max_index from (select i1.schema_id, i1.schema_name, max(index_count) as max_index from (select i.schema_id, i.schema_name, i.table_view, count(*) as index_count from( select t.schema_id, schema_name(t.schema_id) as schema_name, t.name as table_view, case when t.[type] = 'U' then 'Table' when t.[type] = 'V' then 'View' end as [object_type], i.index_id, case when i.is_primary_key = 1 then 'Primary key' when i.is_unique = 1 then 'Unique' else 'Not unique' end as [type], i.[name] as index_name, substring(column_names, 1, len(column_names)-1) as [columns], case when i.[type] = 1 then 'Clustered index' when i.[type] = 2 then 'Nonclustered unique index' when i.[type] = 3 then 'XML index' when i.[type] = 4 then 'Spatial index' when i.[type] = 5 then 'Clustered columnstore index' when i.[type] = 6 then 'Nonclustered columnstore index' when i.[type] = 7 then 'Nonclustered hash index' end as index_type from sys.objects t inner join sys.indexes i on t.object_id = i.object_id cross apply (select col.[name] + ', ' from sys.index_columns ic inner join sys.columns col on ic.object_id = col.object_id and ic.column_id = col.column_id where ic.object_id = t.object_id and ic.index_id = i.index_id order by col.column_id for xml path ('')) D (column_names) where t.is_ms_shipped <> 1 and index_id > 0 ) as i GROUP BY i.schema_id, i.schema_name, i.table_view) as i1 where i1.schema_id = d.schema_id GROUP BY i1.schema_id, i1.schema_name) as indx) as max_index from ( select s.schema_id, s.name as schema_name, t.object_id as t_object_id, t.name as table_name, col.column_id as col_id, col.name as col_name, dt.name as data_type, col.max_length, col.precision, col.is_nullable, v.name as view_name, v.object_id as v_object_id from sys.schemas as s left join sys.tables as t on t.schema_id = s.schema_id left join sys.columns as col on t.object_id = col.object_id left join sys.types as dt on col.user_type_id = dt.user_type_id left join sys.views as v on v.schema_id = s.schema_id where s.name not in ('dbo', 'db_owner', 'db_accessadmin', 'db_securityadmin', 'db_ddladmin', 'db_backupoperator', 'db_datareader', 'db_datawriter', 'db_denydatareader', 'db_denydatawriter', 'sys', 'INFORMATION_SCHEMA', 'guest'))  as d GROUP BY d.schema_id, d.schema_name ORDER BY COUNT(distinct(d.t_object_id)) 



tc04_IsReportStoredProcedureMatchesSource()
storedProcedureList =select schema_name(obj.schema_id) as schema_name, obj.name, mod.definition as procedures from sys.objects obj join sys.sql_modules mod on mod.object_id = obj.object_id cross apply(select p.name + ' ' + TYPE_NAME(p.user_type_id) + ', ' from sys.parameters p where p.object_id = obj.object_id and p.parameter_id != 0 for xml path ('')) par (parameters) where obj.type in ('P', 'X') and schema_name(obj.schema_id) not in ('dbo','db_owner','db_accessadmin','db_securityadmin','db_ddladmin','db_backupoperator','db_datareader','db_datawriter','db_denydatareader','db_denydatawriter','sys','INFORMATION_SCHEMA','guest')









